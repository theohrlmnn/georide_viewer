services:
  gv_backend:
    env_file:
      - .env
    build:
      context: ./backend
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "4000:4000"
    depends_on:
      gv_db:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  gv_frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true

  gv_db:
    platform: ${DOCKER_PLATFORM:-linux/amd64}
    image: postgis/postgis:17-3.5-alpine
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-georide}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  pgdata:
